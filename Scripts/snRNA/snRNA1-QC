# snRNA1-QC
#------------------------------------- Load libraries.
input_dir<- '/work/Neuroinformatics_Core/s204365/scRNA_0001/doubletfinder_seur_objects/'
setwd(files)
#install.packages("stringfish")
#remotes::install_cran("qs", type = "source", configure.args = "--with-simd=AVX2")
library(Seurat)
library(ggplot2)
library(ggpubr)
library(SingleR)
library(Seurat)
library(dplyr)
library(patchwork)
library(scCustomize)
library(SuperExactTest)
library(devtools)
library(Hmisc)
library(SummarizedExperiment)
require(edgeR)
require(LSD)
library(tidyverse)
library(knitr)
library(patchwork)
library(Matrix)
library(cowplot)
library(tidyverse)
theme_set(theme_cowplot())

source('~/plot_functions.R')
source('~/config.R')


batch_correction=FALSE
add_control=FALSE
min.cells <- 3
min.features <- 200
minGenes <- 1000
minRNA <- 2500
maxGenes <- 7000
#maxRNA <- 50000
maxMT <- 10

### Read in data and create Seurat object. ###
ao11<- readRDS("sampleao11.rds")
ao12<- readRDS("sampleao12.rds")
ao19<- readRDS("sampleao19.rds")
ao20<- readRDS("sampleao20.rds")
ao21<- readRDS("sampleao21.rds")
ao22<- readRDS("sampleao22.rds")
ao23<- readRDS("sampleao23.rds")
ao24<- readRDS("sampleao24.rds")
######
ao11$genotype<- "CKO"
ao12$genotype<- "FLX"
ao19$genotype<- "CKO"
ao20$genotype<- "FLX"
ao21$genotype<- "CKO"
ao22$genotype<- "CKO"
ao23$genotype<- "FLX" #alphabetically organizes figures
ao24$genotype<- "FLX" 

ao11$SampleID<- "AO11"
ao12$SampleID<- "AO12"
ao19$SampleID<- "AO19"
ao20$SampleID<- "AO20"
ao21$SampleID<- "AO21"
ao22$SampleID<- "AO22"
ao23$SampleID<- "AO23"
ao24$SampleID<- "AO24"

ao11$library.batch<- "1"
ao12$library.batch<- "1"
ao19$library.batch<- "2"
ao20$library.batch<- "2"
ao21$library.batch<- "2"
ao22$library.batch<- "2"
ao23$library.batch<- "2"
ao24$library.batch<- "2"

#Merge Seurat object.
merged.data<- merge(ao11, y = c(ao12, ao19, ao20, ao21, ao22, ao23, ao24), add.cell.ids = c("AO11", "AO12", "AO19",
                                                                                            "AO20", "AO21", "AO22",
                                                                                            "AO23", "AO24"))

merged.data@meta.data$group[merged.data@meta.data$SampleID == "AO11"|
                              merged.data@meta.data$SampleID == "AO19" |
                              merged.data@meta.data$SampleID == "AO21"|
                              merged.data@meta.data$SampleID == "AO22"]<- "CKO"
merged.data@meta.data$group[merged.data@meta.data$SampleID == "AO12"|
                              merged.data@meta.data$SampleID == "AO20" |
                              merged.data@meta.data$SampleID == "AO23" |
                              merged.data@meta.data$SampleID == "AO24"]<- "FLX"
                                                                                                                                                                                        "AO20", "AO21", "AO22",
                                                                                            
### Cell cycle score identification ###
# A list of cell cycle markers (Tirosh et al, 2015). List is segregated into markers of G2/M phase and S phase markers.
s.genes<- capitalize(tolower(cc.genes$s.genes))                                                                                                                                                                                        
g2m.genes<- capitalize(tolower(cc.genes$g2m.genes))
merged.data<- CellCycleScoring(merged.data, s.features=s.genes, g2m.features=g2m.genes, set.ident=T)

merged<- Add_Mito_Ribo_Seurat(seurat_object = merged, species = "Mouse")
merged<- Add_Cell_Complexity_Seurat(seurat_object = merged)

#Grouped by: CKO vs. FLX groups.
p1<- QC_Plots_Genes(seurat_object = merged, low_cutoff = 300,high_cutoff = 8000, group.by="group", pt.size=0)
p2<- QC_Plots_UMIs(seurat_object = merged, low_cutoff = 1000, high_cutoff = 55000,group.by="group",pt.size=0)
p3<- QC_Plots_Mito(seurat_object = merged, high_cutoff = 2.5, group.by="group",pt.size=0, plot_title="Mitochondrial Proportion (mtDNA%)")
p4<- QC_Plots_Complexity(seurat_object = merged, high_cutoff = 0.8, group.by="group",pt.size=0)
wrap_plots(p1,p2,p3,p4, ncol =4)

#Grouped by: Samples (8).
p5<- QC_Plots_Genes(seurat_object = merged, low_cutoff = 300,high_cutoff = 8000, group.by="SampleID", pt.size=0)
p6<- QC_Plots_UMIs(seurat_object = merged, low_cutoff = 1000, high_cutoff = 55000,group.by="SampleID",pt.size=0)
p7<- QC_Plots_Mito(seurat_object = merged, high_cutoff = 2.5, group.by="SampleID", pt.size=0,plot_title="Mitochondrial Proportion (mtDNA%)")
p8<- QC_Plots_Complexity(seurat_object = merged, high_cutoff = 0.8, group.by="SampleID",pt.size=0)
wrap_plots(p5,p6,p7,p8, ncol =4)

df <- as.data.frame(rev(table(merged$SampleID)))
colnames(df) <- c('SampleID', 'n_cells')

### Bar plot of the number of cells in each sample ###

myFont1<- "Palatino"
library(extrafont)
loadfonts()
barplot_2 <- ggplot(df, aes(y=n_cells, x=reorder(SampleID, -n_cells), fill=SampleID)) + NoLegend()+ DarkTheme()+ 
  geom_bar(stat='identity') +
  scale_y_continuous(expand = c(0,0)) +
  RotatedAxis() + 
  ylab(expression(italic(N)[cells])) + xlab('Sample ID') +
  ggtitle(paste('Count/Sample, Total cells:', sum(df$n_cells))) +
  theme(
    panel.grid.minor=element_blank(),)

#------------------------------------
# Subset data/filter.
#------------------------------------
merged <- subset(merged, nCount_RNA >= 200 & nCount_RNA <= 60000 & percent_mito <= 7)

median_stats_post<- Median_Stats(seurat_object = merged, group_by_var="SampleID",
                                 median_var = "SampleID")
#------------------------------------
# QC Metrics.
#------------------------------------
library(devtools)
library(ggpubr)
merged<- NormalizeData(merged, normalization.method = "LogNormalize", scale.factor = 10000)

print("Get variable genes.")
#par(mfrow = c(1,1))
merged<-FindVariableFeatures(merged, 
                            selection.method = "vst", 
                            nfeatures = 4000)

merged_genes<- rownames(merged)
merged<-ScaleData(merged, features = merged_genes)

#------------------------------------
# PCA + LabelPoints()
#------------------------------------
LabelPoints(
  VariableFeaturePlot(merged),
  points = head(VariableFeatures(merged),10),
  repel = TRUE
) + theme(legend.position="bottom")


print("=====Run PCA=====")
merged<-RunPCA(merged, 
              features = VariableFeatures(object = merged),
              npcs = 60)

# Assign cell-cycle scores
# Here, we assign each cell a score, based on its expression of G2/M and S phase markers. These marker sets should be anti-correlated in their 
# ... expression levels, and cells expressing neither are likely not cycling and in G1 phase.
merged <- CellCycleScoring(merged, s.features = s.genes, g2m.features = g2m.genes, set.ident = TRUE)

# view cell cycle scores and phase assignments
head(merged[[]])

# Visualize the distribution of cell cycle markers across. 
RidgePlot(merged, features = c("Pcna", "Top2a", "Mcm6", "Mki67"), ncol = 2)
merged<- RunPCA(merged, features = c(s.genes,g2m.genes))
DimPlot(merged) #observed that cells separate entirely by phase.

# Regress out cell-cycle-based source of heterogeneity from data.
# For each gene, we model the relationship between gene expression and the S and G2M cell cycle scores.
# The scaled residuals of this model represent a 'corrected' expression matrix, that can be used downstream for dimensional reduction.
merged <- ScaleData(merged, vars.to.regress = c("S.Score", "G2M.Score"), features = rownames(merged))
merged<- RunPCA(merged,features=c(s.genes, g2m.genes))
DimPlot(merged)

s.genes <- capitalize(tolower(cc.genes$s.genes))
g2m.genes <- capitalize(tolower(cc.genes$g2m.genes))
merged <- CellCycleScoring(merged, s.features = s.genes, g2m.features = g2m.genes, set.ident = TRUE)
merged$CC.Difference <- merged$S.Score - merged$G2M.Score

#saveRDS(merged, '/work/Neuroinformatics_Core/s204365/snRNA_scripts/')

